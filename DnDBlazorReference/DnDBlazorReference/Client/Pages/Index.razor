@page "/"

@using System
@using DnDBlazorReference.Shared
@using DnDBlazorReference.Shared.Models
@using DnDBlazorReference.Shared.Models.FiveETools
@using DnDBlazorReference.Client.Data
@using System.Text.Json
@using System.Text.Json.Serialization
@using Tewr.Blazor.FileReader
@inject HttpClient Http
@inject IFileReaderService FileReaderService
@inject DnDBlazorReference.Client.Data.DataStorage DataStore

@code {
    //protected void SearchStringChanged() { StateHasChanged(); }

    //public async void FileChanged()
    //{
    //    var options = new JsonSerializerOptions
    //    {
    //        ReadCommentHandling = JsonCommentHandling.Skip,
    //        AllowTrailingCommas = true
    //    };

    //    foreach (var file in await FileReaderService.CreateReference(_input).EnumerateFilesAsync())
    //    {
    //        if (file == null)
    //        {
    //            continue;
    //        }

    //        isProcessing = true;

    //        var fileInfo = await file.ReadFileInfoAsync();

    //        fileOutput = new List<string>();
    //        const int byteBufferSize = 1024;
    //        byte[] buffer = new byte[byteBufferSize];
    //        using (var reader = await file.OpenReadAsync())
    //        {
    //            try
    //            {
    //                monsterJson = await JsonSerializer.DeserializeAsync<DataStorage.Monster5eJson>(reader, options);
    //            }
    //            catch (Exception e)
    //            {
    //                // do nothing
    //                errorString = e.Message;
    //            }
    //        }

    //        isProcessing = false;
    //    }

    //    StateHasChanged();
    //}

    //public void ProcessJsonOutput()
    //{
    //    outputJson = "Trying to process";
    //    var options = new JsonSerializerOptions
    //    {
    //        WriteIndented = true,
    //    };

    //    outputJson = JsonSerializer.Serialize(monsterJson, options);
    //} 
}
